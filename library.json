{
  "name": "SAMDUE_PWM",
  "version": "1.0.1",
  "keywords": "timing, device, control, timer, pwm, pwm-driver, pwm-frequency, dynamic-pwm, duty-cycle, hardware-based-pwm, multi-channel-pwm, waveform-generator, mission-critical, accuracy, non-blocking, sam, due, sam-due, sam3x8e, atmel-sam",
  "description": "This library enables you to use Hardware-based PWM channels on SAMDUE boards to create and output PWM to pins. The most important feature is they're purely hardware-based PWM channels, supporting very high PWM frequencies. Therefore, their executions are not blocked by bad-behaving functions or tasks. This important feature is absolutely necessary for mission-critical tasks. These hardware-based PWMs, still work even if other software functions are blocking. Moreover, they are much more precise (certainly depending on clock frequency accuracy) than other software-based PWM using ISR, millis() or micros(). That's necessary if you need to control devices requiring high precision. New efficient setPWM_manual function to facilitate waveform creation using PWM",
  "authors":
  {
    "name":  "Khoi Hoang",
    "url":   "https://github.com/khoih-prog",
    "maintainer": true
  },
  "repository":
  {
    "type": "git",
    "url": "https://github.com/khoih-prog/SAMDUE_PWM"
  },
  "homepage": "https://github.com/khoih-prog/SAMDUE_PWM",
  "export": {
    "exclude": [
      "linux",
      "extras",
      "tests"
    ]
  },
  "license": "MIT",
  "frameworks": "*",
  "platforms": "atmelsam",
  "examples": "examples/*/*/*.ino",
  "headers": ["SAMDUE_PWM.h"]
}
